@use "base";

// Main App Component
.app {
  overflow-y: auto;
  overflow-x: hidden;
  width: 100%;
  min-height: 100vh;
  background: base.$primary-color;
}

// Resets
input {
  outline: none;
  background-color: transparent;
}

// Sidebar Component
.sidebar {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;

  &.position {
    position: fixed;
    margin: base.$sidebar-margin-top 0 0 1.85rem;
    padding: 20px;
    z-index: 99;
  }
  &.dimensions {
    border-radius: 14px;
    width: base.$sidebar-width;
    height: base.$sidebar-height;
    min-height: base.$sidebar-height-min;
  }
  &.hidden {
    margin-left: calc(base.$sidebar-hide-button-width - base.$sidebar-width);
  }
  .buttonsContainer {
    height: 85%;
    display: flex;
    flex-direction: column;
  }
  .toggleVisibilityButton {
    @include base.absCenterVertically;
    right: 0.1rem;
    border-radius: 4px;
    width: 10px;
    height: 150px;
  }

  @media screen and (max-width: base.$phone-breakpoint) {
    visibility: hidden;
  }
}

// Searchbar Component
.searchbar {
  display: grid;
  grid-template-columns: auto 1fr;
  column-gap: 0.5rem;
  justify-content: start;
  align-items: center;
  overflow: hidden;
  transition: ease-in-out base.$menu-hide-time;

  &.position {
    margin-top: 5vh;
    margin-left: 1vw;
    @media screen and (min-width: base.$phone-breakpoint) {
      &.collapsedView {
        margin-left: 135px;
      }
      &.fullView {
        margin-left: 3vw;
      }
    }
  }
  &.dimensions {
    width: base.$searchbar-width-pc;
    height: base.$searchbar-height;
    @media screen and (max-width: base.$phone-breakpoint) {
      width: base.$searchbar-width-phone;
    }
  }
}

// Auth Component
.auth {
  justify-content: center;

  &.position {
    margin: auto;
    z-index: 99;
  }
  &.dimensions {
    border-radius: 0.5rem;
    width: 85%;
    max-width: 400px;
    height: 25rem;
    @media screen and (max-width: base.$phone-breakpoint) {
      width: 100%;
      height: 100%;
    }
  }
}

// Form Component
.form {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  &.dimensions {
    padding: 1rem;
    &.login {
      height: 15rem;
    }
    &.register {
      height: 20.2rem;
    }
  }
  .input {
    &.position {
      padding: 0 0.85rem;
    }
    &.dimensions {
      width: 100%;
      height: 2rem;
      border-radius: 0.55rem;
    }
    &.styles {
      color: black;
      background: white;
    }
  }
  label {
    padding-left: 0.25rem;
  }
  .button {
    &.position {
      margin: 0 auto;
    }
    &.dimensions {
      border-radius: 0.45rem;
      width: 8rem;
      height: 2.6rem;
    }
  }
  .error {
    &.position {
      position: absolute;
      padding: 0.15rem 0 0 0.15rem;
    }
    &.styles {
      font-size: 0.75rem;
      color: red;
    }
  }
}

// ContentContainer Component
.contentContainer {
  padding: 0 10px 0 15px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;

  @media screen and (max-width: base.$phone-breakpoint) {
    padding: 0;
  }

  &.position {
    float: right;
  }

  &.dimensions {
    width: 100%;
    height: fit-content;

    @media screen and (min-width: base.$phone-breakpoint) {
      &.fullView {
        width: 100%;
      }
      &.collapsedView {
        width: calc(100vw - 150px);
      }
    }
  }

  &.effects {
    transition: ease-in-out 1s;
  }

  .stateDisplay {
    padding-top: 2rem;
    padding-left: 1rem;
  }
}

// Subcontent Component
.subcontentContainer {
  &.dimensions {
    height: fit-content;
    width: 100%;
  }
  &.styles {
    h2 {
      font-size: base.$section-title-font-size;
      @media screen and (max-width: base.$phone-breakpoint) {
        text-align: center;
      }
    }
  }
  .subcontent {
    padding-bottom: 1rem;
    &.styles {
      &::-webkit-scrollbar {
        height: base.$section-scrollbar-height;
        background: base.$scrollbar-color;
      }
      &::-webkit-scrollbar-thumb {
        background: base.$scrollbar-thumb-color;
      }
    }
    &.themeShort {
      display: grid;
      grid-template-columns: repeat(
        auto-fill,
        minmax(base.$section-short-grid-min-column-width, 1fr)
      );
      grid-gap: base.$section-short-column-gap;
      justify-content: space-between;
      overflow: hidden;
      @media screen and (max-width: base.$phone-breakpoint) {
        display: flex;
        flex-direction: column;
        align-items: center;
      }
    }
    //trending
    &.themeLong {
      overflow-x: scroll;
      overflow-y: hidden;
      display: flex;
      justify-content: space-between;
      gap: 20px;
    }
  }
}

// ThumbnailElement Component
//### THEME ALL ###
// Size
$imageBorderRadius: 8px;
$descHeight: 40px;
$titleFontSize: 1rem;
$titleFontWeight: 600;
$infoFontSize: 0.65rem;
// Color
$infoFontWeight: 300;
$infoFontColor: rgba(255, 255, 255, 0.75);

//### THEME SHORT ###
$elementHeightShort: 150px;
$picHeightShort: calc($elementHeightShort - $descHeight);
$picWidthShort: 170px;

//### THEME LONG ###
$elementHeightLong: 150px;
$elementWidthLong: 320px;

//### ALL THEMES ###
.element {
  position: relative;

  // small, flexible thumbnails
  &.themeShort {
    flex: 1 1 190px;
    flex-basis: 0;
    max-width: 230px;
    min-width: 150px;
    @media screen and (max-width: base.$phone-breakpoint) {
      max-width: 100%;
    }
  }

  // long thumbnails for trending section
  &.themeLong {
    width: $elementWidthLong;
    height: $elementHeightLong;
    min-width: $elementWidthLong;
    min-height: $elementHeightLong;
  }

  .imageWrapper {
    border-radius: $imageBorderRadius;
    overflow: hidden;
    position: relative;

    &.themeLong {
      height: 100%;
    }
    &.themeShort {
      span {
        display: flex !important; // to overwrite base component style
      }
    }

    .thumbnailImage {
      height: 100%;
      width: 100%;
      object-fit: cover;
      transition: ease-in-out, 0.35s;
      &.imageHoverEffect {
        transform: scale(1.05);
      }
    }

    .hoverLayer {
      display: flex;
      justify-content: center;
      align-items: center;

      &.position {
        position: absolute;
        @include base.topLeft;
        z-index: 9;
      }
      &.dimensions {
        width: 100%;
        height: 100%;
      }
      &.effects {
        transition: ease-in-out 0.5s;
      }
      &.styles {
        opacity: 0;
        background: rgba(0, 0, 0, 0.5);
        &.show {
          opacity: 1;
        }
      }
      span {
        display: block !important;
      }
      .playBtn {
        background: base.$play-button-background;
        &:hover {
          background: transparentize($color: rgb(0, 0, 0), $amount: 0.9);
        }
      }
    }
    .bookmarkPos {
      @include base.absPosition(6%, 4%, none, none);
    }
  }

  .description {
    display: flex;
    flex-direction: column;

    &.position {
      z-index: 19;
    }
    &.dimensions {
      height: 25%;
      width: fit-content;
    }
    &.themeShort {
      padding-top: 0.3rem;
    }
    &.themeLong {
      @include base.absPosition(none, none, 0.4rem, 1rem);
    }
    &:hover {
      cursor: pointer;
    }
    .info {
      display: inline-flex;

      &.styles {
        color: darken($color: base.$text-color, $amount: base.$darken-amount);
        font-size: base.$thumbnail-description-font-size;
        font-weight: base.$thumbnail-description-font-weight;
      }
      .info__element {
        display: inline-flex;
        &::before {
          content: "â€¢";
          margin-right: 5px;
          margin-left: 5px;
        }
        &:first-child::before {
          content: "";
          margin: 0px;
        }
      }
      .element_category {
        display: inline-flex;
        align-items: center;
        svg {
          height: base.$thumbnail-description-font-size;
          width: base.$thumbnail-description-font-size;
        }
      }
    }
    .mediaTitle {
      font-size: $titleFontSize;
      font-weight: $titleFontWeight;
    }
  }
}
